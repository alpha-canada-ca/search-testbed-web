apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: testbed-web
  name: testbed-web
  namespace: testbed
  selfLink: /apis/apps/v1/namespaces/testbed/deployments/testbed-web
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: testbed-web
      app.kubernetes.io/name: web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: testbed-web
        app.kubernetes.io/name: web
    spec:
      containers:
      - image: dtobtn/testbed_web:1.0.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /testbed
            port: http
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: web
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /testbed
            port: http
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 512m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 512Mi
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: testbed-web
      serviceAccountName: testbed-web
      terminationGracePeriodSeconds: 30

